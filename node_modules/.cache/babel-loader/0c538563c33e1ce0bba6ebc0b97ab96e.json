{"ast":null,"code":"import jsonData from \"../data/data.json\"; //Step 2: Search Utility\n\nconst search = (searhInput, querySummary) => {\n  const input = searhInput.toLowerCase();\n  const maxBookSearchLimit = 10;\n  var bookId = \"\"; // String of bookIds separated ,\n\n  var noOfBooks = []; // Array of bookIds related to more than one query\n\n  var bookArray = []; // Single Book details\n\n  var masterBookArray = []; // Array of Book details\n\n  var bookCounter = 0; //Iterating through the Query List till maxBookSearchLimit\n\n  for (var x = 0; x < jsonData.queries.length && (bookCounter === 0 || masterBookArray.length < maxBookSearchLimit); x++) {\n    if (jsonData.queries[x].includes(input)) {\n      bookId = querySummary[x];\n\n      if (bookId.length > 1) {\n        noOfBooks = bookId.split(\",\");\n      } else {\n        noOfBooks.push(bookId);\n      }\n\n      while ((bookCounter === 0 || masterBookArray.length < maxBookSearchLimit) && bookCounter < noOfBooks.length) {\n        var bookTitle = jsonData.titles[noOfBooks[bookCounter]];\n        var bookSummary = jsonData.summaries[noOfBooks[bookCounter]].summary;\n        var bookAuthor = jsonData.authors[noOfBooks[bookCounter]].author;\n        bookArray = [bookTitle, bookSummary, bookAuthor];\n        var skipBookflag = false;\n\n        for (var uniqueTitle = 0; bookCounter !== 0 && uniqueTitle < masterBookArray.length; uniqueTitle++) {\n          if (bookArray[0] === masterBookArray[uniqueTitle][0]) {\n            skipBookflag = true;\n          }\n        }\n\n        if (!skipBookflag) {\n          masterBookArray.push(bookArray);\n        }\n\n        bookCounter++;\n      }\n    }\n  }\n\n  return masterBookArray;\n};\n\nexport default search;","map":{"version":3,"sources":["/Users/chethee/Documents/Mala/workspace/search-engine/src/Search/Search.js"],"names":["jsonData","search","searhInput","querySummary","input","toLowerCase","maxBookSearchLimit","bookId","noOfBooks","bookArray","masterBookArray","bookCounter","x","queries","length","includes","split","push","bookTitle","titles","bookSummary","summaries","summary","bookAuthor","authors","author","skipBookflag","uniqueTitle"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,CAACC,UAAD,EAAaC,YAAb,KAA8B;AAC3C,QAAMC,KAAK,GAAGF,UAAU,CAACG,WAAX,EAAd;AACA,QAAMC,kBAAkB,GAAG,EAA3B;AAEA,MAAIC,MAAM,GAAG,EAAb,CAJ2C,CAI1B;;AACjB,MAAIC,SAAS,GAAG,EAAhB,CAL2C,CAKvB;;AACpB,MAAIC,SAAS,GAAG,EAAhB,CAN2C,CAMvB;;AACpB,MAAIC,eAAe,GAAG,EAAtB,CAP2C,CAOjB;;AAC1B,MAAIC,WAAW,GAAG,CAAlB,CAR2C,CAU3C;;AACA,OACE,IAAIC,CAAC,GAAG,CADV,EAEEA,CAAC,GAAGZ,QAAQ,CAACa,OAAT,CAAiBC,MAArB,KACCH,WAAW,KAAK,CAAhB,IAAqBD,eAAe,CAACI,MAAhB,GAAyBR,kBAD/C,CAFF,EAIEM,CAAC,EAJH,EAKE;AACA,QAAIZ,QAAQ,CAACa,OAAT,CAAiBD,CAAjB,EAAoBG,QAApB,CAA6BX,KAA7B,CAAJ,EAAyC;AACvCG,MAAAA,MAAM,GAAGJ,YAAY,CAACS,CAAD,CAArB;;AACA,UAAIL,MAAM,CAACO,MAAP,GAAgB,CAApB,EAAuB;AACrBN,QAAAA,SAAS,GAAGD,MAAM,CAACS,KAAP,CAAa,GAAb,CAAZ;AACD,OAFD,MAEO;AACLR,QAAAA,SAAS,CAACS,IAAV,CAAeV,MAAf;AACD;;AAED,aACE,CAACI,WAAW,KAAK,CAAhB,IAAqBD,eAAe,CAACI,MAAhB,GAAyBR,kBAA/C,KACAK,WAAW,GAAGH,SAAS,CAACM,MAF1B,EAGE;AACA,YAAII,SAAS,GAAGlB,QAAQ,CAACmB,MAAT,CAAgBX,SAAS,CAACG,WAAD,CAAzB,CAAhB;AACA,YAAIS,WAAW,GAAGpB,QAAQ,CAACqB,SAAT,CAAmBb,SAAS,CAACG,WAAD,CAA5B,EAA2CW,OAA7D;AACA,YAAIC,UAAU,GAAGvB,QAAQ,CAACwB,OAAT,CAAiBhB,SAAS,CAACG,WAAD,CAA1B,EAAyCc,MAA1D;AAEAhB,QAAAA,SAAS,GAAG,CAACS,SAAD,EAAYE,WAAZ,EAAyBG,UAAzB,CAAZ;AACA,YAAIG,YAAY,GAAG,KAAnB;;AACA,aACE,IAAIC,WAAW,GAAG,CADpB,EAEEhB,WAAW,KAAK,CAAhB,IAAqBgB,WAAW,GAAGjB,eAAe,CAACI,MAFrD,EAGEa,WAAW,EAHb,EAIE;AACA,cAAIlB,SAAS,CAAC,CAAD,CAAT,KAAiBC,eAAe,CAACiB,WAAD,CAAf,CAA6B,CAA7B,CAArB,EAAsD;AACpDD,YAAAA,YAAY,GAAG,IAAf;AACD;AACF;;AACD,YAAI,CAACA,YAAL,EAAmB;AACjBhB,UAAAA,eAAe,CAACO,IAAhB,CAAqBR,SAArB;AACD;;AACDE,QAAAA,WAAW;AACZ;AACF;AACF;;AACD,SAAOD,eAAP;AACD,CApDD;;AAsDA,eAAeT,MAAf","sourcesContent":["import jsonData from \"../data/data.json\";\n\n//Step 2: Search Utility\nconst search = (searhInput, querySummary) => {\n  const input = searhInput.toLowerCase();\n  const maxBookSearchLimit = 10;\n\n  var bookId = \"\"; // String of bookIds separated ,\n  var noOfBooks = []; // Array of bookIds related to more than one query\n  var bookArray = []; // Single Book details\n  var masterBookArray = []; // Array of Book details\n  var bookCounter = 0;\n\n  //Iterating through the Query List till maxBookSearchLimit\n  for (\n    var x = 0;\n    x < jsonData.queries.length &&\n    (bookCounter === 0 || masterBookArray.length < maxBookSearchLimit);\n    x++\n  ) {\n    if (jsonData.queries[x].includes(input)) {\n      bookId = querySummary[x];\n      if (bookId.length > 1) {\n        noOfBooks = bookId.split(\",\");\n      } else {\n        noOfBooks.push(bookId);\n      }\n\n      while (\n        (bookCounter === 0 || masterBookArray.length < maxBookSearchLimit) &&\n        bookCounter < noOfBooks.length\n      ) {\n        var bookTitle = jsonData.titles[noOfBooks[bookCounter]];\n        var bookSummary = jsonData.summaries[noOfBooks[bookCounter]].summary;\n        var bookAuthor = jsonData.authors[noOfBooks[bookCounter]].author;\n\n        bookArray = [bookTitle, bookSummary, bookAuthor];\n        var skipBookflag = false;\n        for (\n          var uniqueTitle = 0;\n          bookCounter !== 0 && uniqueTitle < masterBookArray.length;\n          uniqueTitle++\n        ) {\n          if (bookArray[0] === masterBookArray[uniqueTitle][0]) {\n            skipBookflag = true;\n          }\n        }\n        if (!skipBookflag) {\n          masterBookArray.push(bookArray);\n        }\n        bookCounter++;\n      }\n    }\n  }\n  return masterBookArray;\n};\n\nexport default search;\n"]},"metadata":{},"sourceType":"module"}