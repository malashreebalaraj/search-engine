{"ast":null,"code":"var _jsxFileName = \"/Users/chethee/Documents/Mala/workspace/search-engine/src/Components/Form/Form.js\";\nimport React, { Component } from \"react\";\nimport \"./Form.css\";\nimport indexData from \"../../Search/IndexData\";\nimport search from \"../../Search/Search\";\nimport Book from \"../Book/Book\";\nvar keywordSummary = indexData();\nvar result = [];\nvar bookResult = [];\nvar resultIndex;\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchInput: \"\",\n      suggestions: []\n    };\n\n    this.changeHandler = e => {\n      var searchInput = e.target.value;\n      let suggestions = [];\n\n      if (searchInput.length > 1) {\n        result = search(this.state.searchInput, keywordSummary);\n\n        for (var i = 0; i < result.length; i++) {\n          suggestions.push(result[i][0]);\n        }\n      }\n\n      this.setState({\n        searchInput: e.target.value,\n        suggestions: suggestions\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault();\n      bookResult.push(result[resultIndex]);\n      this.setState({// result: result[resultIndex],\n        // bookResult: this.state.bookResult.concat([\n        //   result[resultIndex][0],\n        //   result[resultIndex][1],\n        //   result[resultIndex][2],\n        // ]),\n        // bookList: bookList.concat()\n        // concat(<Book result = { this.state.result } />),\n        // result: result.concat(<Book result={this.state.result[resultIndex]} />),\n        //   count: count++,\n        // bookList: this.state.bookList.concat(<Book result={this.state.result} />),\n      });\n    };\n  }\n\n  suggestionSelected(value, index) {\n    this.setState(() => ({\n      searchInput: value,\n      suggestions: []\n    }));\n    resultIndex = index;\n  }\n\n  renderSuggestions() {\n    if (this.state.suggestions.length === 0) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, this.state.suggestions.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      onClick: () => this.suggestionSelected(item, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, item)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Search Books\"), /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"search-box\",\n      type: \"search\",\n      placeholder: \"Enter your search here\",\n      value: this.state.searchInput,\n      onChange: e => this.changeHandler(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"button\",\n      value: \"submit\",\n      onClick: e => this.onSubmitHandler(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Submit\"), this.renderSuggestions(), bookResult.map((book, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Book, {\n      key: index,\n      result: book,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/chethee/Documents/Mala/workspace/search-engine/src/Components/Form/Form.js"],"names":["React","Component","indexData","search","Book","keywordSummary","result","bookResult","resultIndex","Form","state","searchInput","suggestions","changeHandler","e","target","value","length","i","push","setState","onSubmitHandler","preventDefault","suggestionSelected","index","renderSuggestions","map","item","render","book"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Form.css\";\nimport indexData from \"../../Search/IndexData\";\nimport search from \"../../Search/Search\";\nimport Book from \"../Book/Book\";\n\nvar keywordSummary = indexData();\nvar result = [];\nvar bookResult = [];\nvar resultIndex;\nclass Form extends Component {\n  // constructor() {\n  //   super(props);\n  //   this.resultIndex = 0;\n  //   this.bookList = [];\n  //   this.\n  state = {\n    searchInput: \"\",\n    suggestions: [],\n  };\n  // }\n\n  changeHandler = (e) => {\n    var searchInput = e.target.value;\n    let suggestions = [];\n    if (searchInput.length > 1) {\n      result = search(this.state.searchInput, keywordSummary);\n      for (var i = 0; i < result.length; i++) {\n        suggestions.push(result[i][0]);\n      }\n    }\n    this.setState({\n      searchInput: e.target.value,\n      suggestions: suggestions,\n    });\n  };\n\n  suggestionSelected(value, index) {\n    this.setState(() => ({\n      searchInput: value,\n      suggestions: [],\n    }));\n    resultIndex = index;\n  }\n\n  renderSuggestions() {\n    if (this.state.suggestions.length === 0) {\n      return null;\n    }\n    return (\n      <ul>\n        {this.state.suggestions.map((item, index) => (\n          <li key={index} onClick={() => this.suggestionSelected(item, index)}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  onSubmitHandler = (e) => {\n    e.preventDefault();\n    bookResult.push(result[resultIndex]);\n    this.setState({\n      // result: result[resultIndex],\n      // bookResult: this.state.bookResult.concat([\n      //   result[resultIndex][0],\n      //   result[resultIndex][1],\n      //   result[resultIndex][2],\n      // ]),\n      // bookList: bookList.concat()\n      // concat(<Book result = { this.state.result } />),\n      // result: result.concat(<Book result={this.state.result[resultIndex]} />),\n      //   count: count++,\n      // bookList: this.state.bookList.concat(<Book result={this.state.result} />),\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"Form\">\n        <React.Fragment>\n          <h1>Search Books</h1>\n          <input\n            data-testid=\"search-box\"\n            type=\"search\"\n            placeholder=\"Enter your search here\"\n            value={this.state.searchInput}\n            onChange={(e) => this.changeHandler(e)}\n          />\n          <button\n            data-testid=\"button\"\n            value=\"submit\"\n            onClick={(e) => this.onSubmitHandler(e)}\n          >\n            Submit\n          </button>\n          {this.renderSuggestions()}\n\n          {/* {this.state.bookResult &&\n            this.state.bookResult.map((item) => (\n              <div>\n                <Book result={item} />\n              </div>\n            ))} */}\n\n          {bookResult.map((book, index) => (\n            <div>\n              <Book key={index} result={book} />\n            </div>\n          ))}\n\n          {/* {this.state.bookResult &&\n            <Book result={this.state.bookResult}  */}\n\n          {/* <ul>\n        {this.state.suggestions.map((item, index) => (\n          <li key={index} onClick={() => this.suggestionSelected(item, index)}>\n            {item}\n          </li>\n        ))}\n      </ul> */}\n        </React.Fragment>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}