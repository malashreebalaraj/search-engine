{"ast":null,"code":"import jsonData from \"../data/data.json\"; //Step 2: Search Utility\n\nconst search = (searhInput, querySummary) => {\n  const input = searhInput.toLowerCase();\n  const maxBookSearchLimit = 10;\n  var bookId = \"\"; // String of bookIds separated ,\n\n  var noOfBooks = []; // Array of bookIds related to more than one query\n\n  var masterBookArray = []; // Array of Book details\n\n  var bookCounter = 0; //Iterating through the Query List till maxBookSearchLimit\n\n  for (var x = 0; x < jsonData.queries.length && (bookCounter === 0 || masterBookArray.length < maxBookSearchLimit); x++) {\n    if (jsonData.queries[x].includes(input)) {\n      bookId = querySummary[x];\n\n      if (bookId.length > 1) {\n        noOfBooks = bookId.split(\",\");\n      } else {\n        noOfBooks.push(bookId);\n      }\n\n      while ((bookCounter === 0 || masterBookArray.length < maxBookSearchLimit) && bookCounter < noOfBooks.length) {\n        var bookTitle = jsonData.titles[noOfBooks[bookCounter]];\n        var bookSummary = jsonData.summaries[noOfBooks[bookCounter]].summary;\n        var bookAuthor = jsonData.authors[noOfBooks[bookCounter]].author; // Single Book details\n\n        var bookArray = [bookTitle, bookSummary, bookAuthor];\n        var skipBookflag = false;\n\n        for (var uniqueTitle = 0; bookCounter !== 0 && uniqueTitle < masterBookArray.length; uniqueTitle++) {\n          if (bookArray[0] === masterBookArray[uniqueTitle][0]) {\n            skipBookflag = true;\n          }\n        }\n\n        if (!skipBookflag) {\n          masterBookArray.push(bookArray);\n        }\n\n        bookCounter++;\n      }\n    }\n  }\n\n  return masterBookArray;\n};\n\nexport default search;","map":{"version":3,"sources":["/Users/chethee/Documents/Mala/workspace/search-engine/src/Search/Search.js"],"names":["jsonData","search","searhInput","querySummary","input","toLowerCase","maxBookSearchLimit","bookId","noOfBooks","masterBookArray","bookCounter","x","queries","length","includes","split","push","bookTitle","titles","bookSummary","summaries","summary","bookAuthor","authors","author","bookArray","skipBookflag","uniqueTitle"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,mBAArB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,CAACC,UAAD,EAAaC,YAAb,KAA8B;AAC3C,QAAMC,KAAK,GAAGF,UAAU,CAACG,WAAX,EAAd;AACA,QAAMC,kBAAkB,GAAG,EAA3B;AAEA,MAAIC,MAAM,GAAG,EAAb,CAJ2C,CAI1B;;AACjB,MAAIC,SAAS,GAAG,EAAhB,CAL2C,CAKvB;;AACpB,MAAIC,eAAe,GAAG,EAAtB,CAN2C,CAMjB;;AAC1B,MAAIC,WAAW,GAAG,CAAlB,CAP2C,CAS3C;;AACA,OACE,IAAIC,CAAC,GAAG,CADV,EAEEA,CAAC,GAAGX,QAAQ,CAACY,OAAT,CAAiBC,MAArB,KACCH,WAAW,KAAK,CAAhB,IAAqBD,eAAe,CAACI,MAAhB,GAAyBP,kBAD/C,CAFF,EAIEK,CAAC,EAJH,EAKE;AACA,QAAIX,QAAQ,CAACY,OAAT,CAAiBD,CAAjB,EAAoBG,QAApB,CAA6BV,KAA7B,CAAJ,EAAyC;AACvCG,MAAAA,MAAM,GAAGJ,YAAY,CAACQ,CAAD,CAArB;;AACA,UAAIJ,MAAM,CAACM,MAAP,GAAgB,CAApB,EAAuB;AACrBL,QAAAA,SAAS,GAAGD,MAAM,CAACQ,KAAP,CAAa,GAAb,CAAZ;AACD,OAFD,MAEO;AACLP,QAAAA,SAAS,CAACQ,IAAV,CAAeT,MAAf;AACD;;AAED,aACE,CAACG,WAAW,KAAK,CAAhB,IAAqBD,eAAe,CAACI,MAAhB,GAAyBP,kBAA/C,KACAI,WAAW,GAAGF,SAAS,CAACK,MAF1B,EAGE;AACA,YAAII,SAAS,GAAGjB,QAAQ,CAACkB,MAAT,CAAgBV,SAAS,CAACE,WAAD,CAAzB,CAAhB;AACA,YAAIS,WAAW,GAAGnB,QAAQ,CAACoB,SAAT,CAAmBZ,SAAS,CAACE,WAAD,CAA5B,EAA2CW,OAA7D;AACA,YAAIC,UAAU,GAAGtB,QAAQ,CAACuB,OAAT,CAAiBf,SAAS,CAACE,WAAD,CAA1B,EAAyCc,MAA1D,CAHA,CAKA;;AACA,YAAIC,SAAS,GAAG,CAACR,SAAD,EAAYE,WAAZ,EAAyBG,UAAzB,CAAhB;AACA,YAAII,YAAY,GAAG,KAAnB;;AACA,aACE,IAAIC,WAAW,GAAG,CADpB,EAEEjB,WAAW,KAAK,CAAhB,IAAqBiB,WAAW,GAAGlB,eAAe,CAACI,MAFrD,EAGEc,WAAW,EAHb,EAIE;AACA,cAAIF,SAAS,CAAC,CAAD,CAAT,KAAiBhB,eAAe,CAACkB,WAAD,CAAf,CAA6B,CAA7B,CAArB,EAAsD;AACpDD,YAAAA,YAAY,GAAG,IAAf;AACD;AACF;;AACD,YAAI,CAACA,YAAL,EAAmB;AACjBjB,UAAAA,eAAe,CAACO,IAAhB,CAAqBS,SAArB;AACD;;AACDf,QAAAA,WAAW;AACZ;AACF;AACF;;AACD,SAAOD,eAAP;AACD,CApDD;;AAsDA,eAAeR,MAAf","sourcesContent":["import jsonData from \"../data/data.json\";\n\n//Step 2: Search Utility\nconst search = (searhInput, querySummary) => {\n  const input = searhInput.toLowerCase();\n  const maxBookSearchLimit = 10;\n\n  var bookId = \"\"; // String of bookIds separated ,\n  var noOfBooks = []; // Array of bookIds related to more than one query\n  var masterBookArray = []; // Array of Book details\n  var bookCounter = 0;\n\n  //Iterating through the Query List till maxBookSearchLimit\n  for (\n    var x = 0;\n    x < jsonData.queries.length &&\n    (bookCounter === 0 || masterBookArray.length < maxBookSearchLimit);\n    x++\n  ) {\n    if (jsonData.queries[x].includes(input)) {\n      bookId = querySummary[x];\n      if (bookId.length > 1) {\n        noOfBooks = bookId.split(\",\");\n      } else {\n        noOfBooks.push(bookId);\n      }\n\n      while (\n        (bookCounter === 0 || masterBookArray.length < maxBookSearchLimit) &&\n        bookCounter < noOfBooks.length\n      ) {\n        var bookTitle = jsonData.titles[noOfBooks[bookCounter]];\n        var bookSummary = jsonData.summaries[noOfBooks[bookCounter]].summary;\n        var bookAuthor = jsonData.authors[noOfBooks[bookCounter]].author;\n\n        // Single Book details\n        var bookArray = [bookTitle, bookSummary, bookAuthor];\n        var skipBookflag = false;\n        for (\n          var uniqueTitle = 0;\n          bookCounter !== 0 && uniqueTitle < masterBookArray.length;\n          uniqueTitle++\n        ) {\n          if (bookArray[0] === masterBookArray[uniqueTitle][0]) {\n            skipBookflag = true;\n          }\n        }\n        if (!skipBookflag) {\n          masterBookArray.push(bookArray);\n        }\n        bookCounter++;\n      }\n    }\n  }\n  return masterBookArray;\n};\n\nexport default search;\n"]},"metadata":{},"sourceType":"module"}